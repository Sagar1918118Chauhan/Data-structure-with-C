#include<stdio.h>
#include<stdlib.h>

#define MAX_SIZE 100

int queue[MAX_SIZE];
int front = -1;
int rear = -1;

void enqueue();
void dequeue();
void display();

int main() {
    int choice;
    while(1) {
        printf("\nPerform Queue operation:\n");
        printf("Choose the operation\n1. For Enqueue\n2. For Dequeue\n3. For Display\n4. For Exit\n");
        printf("Please Enter your choice: ");
        scanf("%d", &choice);
        switch(choice) {
            case 1: enqueue(); break;
            case 2: dequeue(); break;
            case 3: display(); break;
            case 4: exit(0);
            default: printf("Invalid choice\n");
        }
    }
}

void enqueue() {
    int x;
    printf("Enter item to enqueue: ");
    scanf("%d", &x);

    if (rear == MAX_SIZE - 1) {
        printf("Queue is full. Cannot enqueue.\n");
        return;
    }

    if (front == -1) {
        front = 0;
    }

    rear++;
    queue[rear] = x;

    printf("Element %d enqueued successfully\n", x);
}

void dequeue() {
    if (front == -1 || front > rear) {
        printf("Queue is empty. Cannot dequeue.\n");
        return;
    }

    int dequeuedElement = queue[front];
    front++;

    printf("Element %d dequeued successfully\n", dequeuedElement);

    if (front > rear) {
        front = -1;
        rear = -1;
    }
}

void display() {
    if (front == -1 || front > rear) {
        printf("Queue is empty.\n");
        return;
    }

    printf("Elements present in Queue:\n");
    for (int i = front; i <= rear; i++) {
        printf("%d\t", queue[i]);
    }
    printf("\n");
}
